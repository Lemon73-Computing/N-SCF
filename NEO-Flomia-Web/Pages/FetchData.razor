@page "/fetchdata"
@inject HttpClient Http

<PageTitle>データ | N-SCF</PageTitle>

<h1>データ</h1>

<p>このコンポーネントは、サーバーからのデータ取得を実演しています。</p>

@if (colors == null)
{
    <p><em>読み込み中…</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>名前</th>
                <th>HTMLカラー</th>
                <th>R G B</th>
                <th>H S V</th>
                <th>Y M C K</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var color in colors)
            {
                <tr>
                    <td>@color.name</td>
                    <td>@color.html</td>
                    <td>@color.rgb</td>
                    <td>@color.hsv</td>
                    <td>@color.ymck</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Color[]? colors;

    protected override async Task OnInitializedAsync()
    {
        colors = await Http.GetFromJsonAsync<Color[]>("sample-data/color.json");
    }

    public class Color
    {
        public string? name { get; set; }

        public string? html { get; set; }

        public string? rgb { get; set; }

        public string? hsv { get; set; }

        public string? ymck { get; set; }
    }
    /*
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
    */
}
